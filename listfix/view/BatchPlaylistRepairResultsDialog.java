/*
 * listFix() - Fix Broken Playlists!
 * Copyright (C) 2001-2009 Jeremy Caron
 *
 * This file is part of listFix().
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, please see http://www.gnu.org/licenses/
 */

package listfix.view;

import java.awt.Component;
import java.awt.Point;
import java.util.Enumeration;
import java.util.List;

import javax.swing.JTable;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

import listfix.model.*;

public class BatchPlaylistRepairResultsDialog extends javax.swing.JDialog
{
	public static final int OK = 0;
	public static final int CANCEL = 1;
	private int resultCode = CANCEL;
	private RepairedPlaylistResultTableModel tableModel;

	/** Creates new form BatchPlaylistRepairResultsDialog */
	BatchPlaylistRepairResultsDialog(java.awt.Frame parent, boolean modal, List<RepairedPlaylistResult> input)
	{
		super(parent, modal);
		tableModel = new RepairedPlaylistResultTableModel(input);
		initComponents();
		initColumnSizesAndSorting(resultsTable);
	}

	public int getResultCode()
	{
		return resultCode;
	}

	public void center()
	{
		Point parentLocation = this.getParent().getLocationOnScreen();

		double x = parentLocation.getX();
		double y = parentLocation.getY();

		int width = this.getParent().getWidth();
		int height = this.getParent().getHeight();

		this.setLocation((int) x + (width - this.getWidth()) / 2, (int) y + (height - this.getHeight()) / 2);
	}

	private void initColumnSizesAndSorting(JTable table)
	{
		RepairedPlaylistResultTableModel model = (RepairedPlaylistResultTableModel) table.getModel();
		Component comp = null;
		int headerWidth = 0;
		int cellWidth = 0;
		Object[] longValues = model.longestValues();
		Enumeration<TableColumn> columns = table.getColumnModel().getColumns();

		JTableHeader header = table.getTableHeader();
		header.setUpdateTableInRealTime(false);
		// header.addMouseListener(new ClosestMatchColumnListener(resultsTable, model));

		TableCellRenderer headerRenderer = header.getDefaultRenderer();
		int count = 0;
		while (columns.hasMoreElements())
		{
			TableColumn column = columns.nextElement();
			comp = headerRenderer.getTableCellRendererComponent(table, column.getHeaderValue(), false, false, 0, 0);
			headerWidth = comp.getPreferredSize().width;
			comp = table.getDefaultRenderer(model.getColumnClass(count)).getTableCellRendererComponent(table, longValues[count], false, false, 0, count);
			cellWidth = comp.getPreferredSize().width;
			column.setPreferredWidth(Math.max(headerWidth, cellWidth));
			count++;
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTable = new listfix.view.support.ZebraJTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Batch Repair Results");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 400));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setOpaque(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(750, 500));

        resultsTable.setModel(tableModel);
        resultsTable.setFillsViewportHeight(true);
        resultsTable.setFont(new java.awt.Font("Verdana", 0, 9)); // NOI18N
        resultsTable.setIntercellSpacing(new java.awt.Dimension(1, 3));
        resultsTable.setRowHeight(20);
        resultsTable.setShowHorizontalLines(false);
        resultsTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(resultsTable);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jButton1.setFont(new java.awt.Font("Verdana", 0, 9));
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
		setVisible(false);
		dispose();
		resultCode = OK;
}//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private listfix.view.support.ZebraJTable resultsTable;
    // End of variables declaration//GEN-END:variables
}
