package listfix.view;

/**
 *
 * @author  Administrator
 */
import java.awt.Point;
import listfix.model.AppOptions;

public class AppOptionsDialog extends javax.swing.JDialog 
{    
    private int resultCode;
    private String fileName;
    private AppOptions options = null;
    public static final int OK = 0;
    public static final int CANCEL = 1;
    
    /** Creates new form EditFilenameDialog */
    public AppOptionsDialog(java.awt.Frame parent, String title, boolean modal, AppOptions opts) 
    {
        super(parent, title, modal);
        if (opts == null)
        {
            options = new AppOptions();
        }
        else
        {
            options = opts;
        }
        initComponents();
        this.center();
    }    
    
    public AppOptionsDialog()
    {
        
    }
    
    public String getFileName()
    {
        return fileName;
    }
    
    public void setFileName(String x)
    {
        fileName = x;
    }
    
    public void setResultCode(int i)
    {
        resultCode = i;
    }
    
    public int getResultCode()
    {
        return resultCode;
    }
    
    private void center()
    {
        Point parentLocation = this.getParent().getLocationOnScreen();
        double x = parentLocation.getX();
        double y = parentLocation.getY();
        int width = this.getParent().getWidth();
        int height = this.getParent().getHeight();

        this.setLocation((int) x + (width - this.getWidth()) / 2, (int) y + (height - this.getHeight()) / 2);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        recentPlaylistLimitComboBox = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        autoLocateCheckBox = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        relativePathsCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "General Config", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 9)));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 250));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 8, 0));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 9));
        jLabel1.setText("Recent Playlist Limit: ");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setMinimumSize(new java.awt.Dimension(111, 9));
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel3.add(jLabel1);

        recentPlaylistLimitComboBox.setFont(new java.awt.Font("Verdana", 0, 9));
        recentPlaylistLimitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));
        recentPlaylistLimitComboBox.setSelectedItem("" + options.getMaxPlaylistHistoryEntries());
        recentPlaylistLimitComboBox.setPreferredSize(new java.awt.Dimension(50, 20));
        jPanel3.add(recentPlaylistLimitComboBox);

        jPanel1.add(jPanel3);

        jPanel4.setMinimumSize(new java.awt.Dimension(165, 20));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 8, 0));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 9));
        jLabel2.setText("Auto-locate missing playlist entries on load:");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setMinimumSize(new java.awt.Dimension(111, 9));
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel4.add(jLabel2);

        autoLocateCheckBox.setSelected(options.getAutoLocateEntriesOnPlaylistLoad());
        jPanel4.add(autoLocateCheckBox);

        jPanel1.add(jPanel4);

        jPanel5.setMinimumSize(new java.awt.Dimension(165, 20));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 8, 0));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 9));
        jLabel3.setText("Save playlists with relative paths when possible:");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel3.setMinimumSize(new java.awt.Dimension(111, 9));
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel5.add(jLabel3);

        relativePathsCheckBox.setSelected(options.getSavePlaylistsWithRelativePaths());
        jPanel5.add(relativePathsCheckBox);

        jPanel1.add(jPanel5);

        jPanel6.add(jPanel1);

        jPanel2.setMaximumSize(new java.awt.Dimension(400, 24));
        jPanel2.setMinimumSize(new java.awt.Dimension(131, 24));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 32));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton1.setFont(new java.awt.Font("Verdana", 0, 9));
        jButton1.setText("OK");
        jButton1.setMinimumSize(new java.awt.Dimension(49, 20));
        jButton1.setPreferredSize(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setFont(new java.awt.Font("Verdana", 0, 9));
        jButton2.setText("Cancel");
        jButton2.setMinimumSize(new java.awt.Dimension(67, 20));
        jButton2.setPreferredSize(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jPanel6.add(jPanel2);

        getContentPane().add(jPanel6);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
        dispose();
        setResultCode( CANCEL );
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);        
        dispose();
        setResultCode( OK );
    }//GEN-LAST:event_jButton1ActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) 
    {
        new AppOptionsDialog(new java.awt.Frame(), "listFix() options", true, null).setVisible(true);
    }
    
    public AppOptions showDialog() 
    {
        this.setVisible(true);
        if (this.getResultCode() == OK)
        {
            options.setAutoLocateEntriesOnPlaylistLoad(autoLocateCheckBox.isSelected());
            options.setMaxPlaylistHistoryEntries( new Integer((String)recentPlaylistLimitComboBox.getItemAt(recentPlaylistLimitComboBox.getSelectedIndex())).intValue() );
            options.setSavePlaylistsWithRelativePaths(relativePathsCheckBox.isSelected());
        }
        return options;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoLocateCheckBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JComboBox recentPlaylistLimitComboBox;
    private javax.swing.JCheckBox relativePathsCheckBox;
    // End of variables declaration//GEN-END:variables

}
