buildscript {
	repositories {
		mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
	}
	dependencies {
		
        // https://github.com/fvarrui/JavaPackager
        classpath 'io.github.fvarrui:javapackager:1.6.7'
        
        /* https://gitlab.com/svg2ico/svg2ico-gradle-plugin */        
        classpath ('gradle.plugin.com.gitlab.svg2ico:svg2ico-gradle-plugin:0.11') {
            exclude module: 'commons-io'
        }

	}
    // force to use commons-io:2.11.0 instead of svg2ico-gradle-plugin transitive commons-io (which not includes org.apache.commons.io.FileUtils.copyInputStreamToFile method)
    configurations.classpath {
        resolutionStrategy {
            force 'commons-io:commons-io:2.11.0'
        }
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'idea'

    /* https://github.com/openjfx/javafx-gradle-plugin */
    id 'org.openjfx.javafxplugin' version '0.0.10'

    /* Generate Java code from XSD */
    id 'org.unbroken-dome.xjc' version '2.0.0'

    id 'checkstyle'
}

apply plugin: 'io.github.fvarrui.javapackager.plugin'
apply plugin: 'com.gitlab.svg2ico'

version '2.4.0'

sourceCompatibility = 8
targetCompatibility = 15

javafx {
    version = '17.0.1'
    modules = ['javafx.base', 'javafx.controls', 'javafx.graphics', 'javafx.swing']
    configuration = 'implementation'
}

project.mainClassName = 'listfix.view.GUIScreen'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    implementation files('src/lib/net.mariottini.swing.jar')

    // Provides christophedelory.playlist.*
    implementation files('src/lib/lizzy.jar')

    implementation files('src/lib/jide-common.jar')
    implementation files('src/lib/jide-components.jar')

    // https://mvnrepository.com/artifact/com.jgoodies/jgoodies-common
    implementation 'com.jgoodies:jgoodies-common:1.8.0'

    // https://mvnrepository.com/artifact/com.jgoodies/jgoodies-looks
    implementation 'com.jgoodies:jgoodies-looks:2.7.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // https://mvnrepository.com/artifact/log4j/log4j
    implementation 'log4j:log4j:1.2.6'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.11.0'
}

application {
    // Define the main class for the application.
    mainClass = project.mainClassName
}

sourceSets {
    main {
            java {
                srcDirs = ['src/main/java', 'build/generated/sources/xjc/java/main']
            }
            resources {
            	  srcDirs= ['src/main/resources']
    				}
        }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn xjcGenerate
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    setDuplicatesStrategy(DuplicatesStrategy.WARN)
    baseName = "listFix"
    archiveClassifier = "all"
    from { configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.register('makePngIcon', Svg2PngTask) {
    source = new File('src/main/svg/listFix() icon.svg')
    width = 64
	  height = 64
		destination = new File('src/main/resources/images/icon.png')
}

tasks.register('makeSplashScreen', Svg2PngTask) {
    source = new File('src/main/svg/listFix() logo.svg')
    width = 400
    height = 160
	  destination = new File('src/main/resources/images/listfixSplashScreen.png')
}

tasks.register('makeIcon', Svg2IcoTask) {
    input {
        source = file('src/main/svg/listFix() icon.svg')
    }
    destination = file('website/favicon.ico')
}

tasks.withType(Checkstyle) {
    exclude 'listfix/model/playlists/winamp/generated/**.java'
}

task packageMyApp(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: [ makeIcon, fatJar ]) {
	// mandatory
	mainClass = project.mainClassName
	runnableJar = file("build/libs/${project.name}-${project.version}-all.jar")
	// optional
	bundleJre = true
	generateInstaller = true
	administratorRequired = false
	platform = 'windows'
	licenseFile = file('LICENSE.txt')
	copyDependencies = false
	customizedJre = false
    winConfig {
        headerType = 'gui'
        icoFile = file("${projectDir}/website/favicon.ico")
    }
    description = 'Repairs Missing Entries in Playlist Files'
    organizationName = 'Borewit'
    organizationUrl = 'https://github.com/Borewit'
    url = 'https://github.com/Borewit/listFix'
}

applicationDefaultJvmArgs = ['--add-exports=java.desktop/com.sun.java.swing.plaf.windows=ALL-UNNAMED',
                             '--add-exports=java.desktop/sun.awt.shell=ALL-UNNAMED'
                            ]
