plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'idea'
    id 'edu.sc.seis.launch4j' version '2.5.1'
}

apply plugin: "edu.sc.seis.launch4j"

version '2.3.0'

sourceCompatibility = 7
targetCompatibility = 7

project.mainClassName = 'listfix.view.GUIScreen'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    implementation files('src/lib/net.mariottini.swing.jar')

    // Provides christophedelory.playlist.*
    implementation files('src/lib/lizzy.jar')

		implementation files('src/lib/jide-common.jar')
		implementation files('src/lib/jide-components.jar')

		// https://mvnrepository.com/artifact/com.jgoodies/jgoodies-common
		implementation 'com.jgoodies:jgoodies-common:1.8.0'

		// https://mvnrepository.com/artifact/com.jgoodies/jgoodies-looks
    implementation 'com.jgoodies:jgoodies-looks:2.7.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

		// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // https://mvnrepository.com/artifact/log4j/log4j
    implementation 'log4j:log4j:1.2.6'

		// https://mvnrepository.com/artifact/commons-io/commons-io
		implementation 'commons-io:commons-io:2.11.0'
}

application {
    // Define the main class for the application.
    mainClass = project.mainClassName
}

sourceSets {
    main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
            	  srcDirs= ["src/main/resources"]
    				}
        }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    setDuplicatesStrategy(DuplicatesStrategy.WARN)
    baseName = "listFix"
    archiveClassifier = "all"
    from { configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// https://github.com/TheBoegl/gradle-launch4j
launch4j {
    headerType='gui'
    icon = "${projectDir}/website/favicon.ico"
    mainClassName = project.mainClassName
    companyName = 'Borewit'
    downloadUrl = 'https://github.com/Borewit/listFix/releases'
    fileDescription = 'Repairs Missing Entries in Playlist Files'
    supportUrl = 'https://github.com/Borewit/listFix/issues'
    copyConfigurable = [] // Don't copy dependencies
    jarTask = project.tasks.fatJar // Use fat jar
}

