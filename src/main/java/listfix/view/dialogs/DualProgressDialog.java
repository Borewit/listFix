

package listfix.view.dialogs;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.*;

public class DualProgressDialog extends JDialog
{
  /** Creates new form DualProgressDialog
   */
  public DualProgressDialog(Frame parent, String title, boolean modal)
  {
    super(parent, title, modal);
    initComponents();
  }

  public DualProgressDialog(Frame parent, String title, String taskMsg, String overallMsg)
  {
    this(parent, title, true);

    _taskLabel.setText(taskMsg);

    _overallLabel.setText(overallMsg);

    pack();

    setSize(400, getHeight());
    setLocationRelativeTo(parent);

    addWindowListener(new WindowAdapter()
    {
      @Override
      public void windowOpened(WindowEvent e)
      {
        _worker.execute();
      }
    });
  }

  /**
   *
   * 
   */
  public void show(SwingWorker worker)
  {
    _worker = worker;

    PropertyChangeSupport pcs = _worker.getPropertyChangeSupport();

    // close dialog when state changes to done
    pcs.addPropertyChangeListener("state", new PropertyChangeListener()
    {
      @Override public void propertyChange(PropertyChangeEvent evt)
      {
        if (_worker.isDone())
        {
          setVisible(false);
        }
      }
    });


    setVisible(true);
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        _middlePanel = new JPanel();
        _taskLabel = new JLabel();
        _taskProgress = new JProgressBar();
        _overallLabel = new JLabel();
        _overallProgress = new JProgressBar();
        _bottomPanel = new JPanel();
        _cancelButton = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override public void windowClosing(WindowEvent evt) {
                formWindowClosing();
            }
        });

        _middlePanel.setLayout(new GridBagLayout());

        _taskLabel.setText("Task Progress");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(10, 10, 4, 10);
        _middlePanel.add(_taskLabel, gridBagConstraints);

        _taskProgress.setMinimumSize(new Dimension(250, 14));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 10, 10, 10);
        _middlePanel.add(_taskProgress, gridBagConstraints);

        _overallLabel.setText("Overall Progress");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(10, 10, 4, 10);
        _middlePanel.add(_overallLabel, gridBagConstraints);

        _overallProgress.setMinimumSize(new Dimension(250, 14));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 10, 10, 10);
        _middlePanel.add(_overallProgress, gridBagConstraints);

        getContentPane().add(_middlePanel, BorderLayout.CENTER);

        _bottomPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));

        _cancelButton.setText("Cancel");
        _cancelButton.addActionListener(new ActionListener() {
            @Override public void actionPerformed(ActionEvent evt) {
                _cancelButtonActionPerformed();
            }
        });
        _cancelButton.addKeyListener(new KeyAdapter() {
            @Override public void keyPressed(KeyEvent evt) {
                _cancelButtonKeyPressed(evt);
            }
        });
        _bottomPanel.add(_cancelButton);

        getContentPane().add(_bottomPanel, BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void _cancelButtonActionPerformed()//GEN-FIRST:event__cancelButtonActionPerformed
  {//GEN-HEADEREND:event__cancelButtonActionPerformed
    _worker.cancel(true);
  }//GEN-LAST:event__cancelButtonActionPerformed

  private void formWindowClosing()//GEN-FIRST:event_formWindowClosing
  {//GEN-HEADEREND:event_formWindowClosing
    _worker.cancel(true);
  }//GEN-LAST:event_formWindowClosing

  private void _cancelButtonKeyPressed(KeyEvent evt)//GEN-FIRST:event__cancelButtonKeyPressed
  {//GEN-HEADEREND:event__cancelButtonKeyPressed
    if (evt.getKeyCode() == evt.VK_ESCAPE)
    {
      _worker.cancel(true);
    }
  }//GEN-LAST:event__cancelButtonKeyPressed

  /**
   *
   * 
   */
  public JLabel getTaskLabel()
  {
    return _taskLabel;
  }

  public JProgressBar getTaskProgressBar()
  {
    return _taskProgress;
  }

  public JLabel getOverallLabel()
  {
    return _overallLabel;
  }

  public JProgressBar getOverallProgressBar()
  {
    return _overallProgress;
  }

  SwingWorker _worker;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel _bottomPanel;
    private JButton _cancelButton;
    private JPanel _middlePanel;
    private JLabel _overallLabel;
    private JProgressBar _overallProgress;
    private JLabel _taskLabel;
    private JProgressBar _taskProgress;
    // End of variables declaration//GEN-END:variables
}
